----------------------------------------------------------
-- GROUP BY와 GROUP BY~ROLLUP의 비교
----------------------------------------------------------
-- GROUP BY
SELECT TO_CHAR(ORD.ORD_DT, 'YYYYMM') AS ORD_YM
    , ORD.CUS_ID
    , SUM(ORD.ORD_AMT) AS ORD_AMT
FROM T_ORD ORD
WHERE CUS_ID IN ('CUS_0001' , 'CUS_0002')
AND ORD.ORD_DT BETWEEN '20170301' AND '20170430'
GROUP BY TO_CHAR(ORD.ORD_DT, 'YYYYMM')
    , ORD.CUS_ID
;

-- ROLLUP
SELECT TO_CHAR(ORD.ORD_DT, 'YYYYMM') AS ORD_YM
    , ORD.CUS_ID
    , SUM(ORD.ORD_AMT) AS ORD_AMT
FROM T_ORD ORD
WHERE CUS_ID IN ('CUS_0001' , 'CUS_0002')
AND ORD.ORD_DT BETWEEN '20170301' AND '20170430'
GROUP BY
ROLLUP (TO_CHAR(ORD.ORD_DT, 'YYYYMM')
    , ORD.CUS_ID)
;




-- 답
	SELECT  TO_CHAR(T1.ORD_DT,'YYYYMM') ORD_YM
			,T1.CUS_ID
			,SUM(T1.ORD_AMT) ORD_AMT
	FROM    T_ORD T1
	WHERE   T1.CUS_ID IN ('CUS_0001','CUS_0002')
	AND     T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
	AND     T1.ORD_DT < TO_DATE('20170501','YYYYMMDD')
	GROUP BY TO_CHAR(T1.ORD_DT,'YYYYMM') ,T1.CUS_ID;

	SELECT TO_CHAR(T1.ORD_DT,'YYYYMM') ORD_YM
			,T1.CUS_ID
			,SUM(T1.ORD_AMT) ORD_AMT
	FROM    T_ORD T1
	WHERE   T1.CUS_ID IN ('CUS_0001','CUS_0002')
	AND     T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
	AND     T1.ORD_DT < TO_DATE('20170501','YYYYMMDD')
	GROUP BY
	ROLLUP(TO_CHAR(T1.ORD_DT,'YYYYMM') ,T1.CUS_ID);


-- ************************************************
-- PART I - 2.2.2 SQL1
-- ************************************************

	-- 주문상태, 주문년월, 고객ID 순서로 ROLLUP
SELECT ORD.ORD_ST AS ORD_ST
    , TO_CHAR(ORD.ORD_DT, 'YYYYMM') AS ORD_YM
    , ORD.CUS_ID AS CUS_ID
    , SUM(ORD.ORD_AMT) AS ORD_AMT
FROM T_ORD ORD
WHERE ORD.CUS_ID IN ('CUS_0001', 'CUS_0002')
GROUP BY ROLLUP (ORD.ORD_ST, TO_CHAR(ORD.ORD_DT, 'YYYYMM'), ORD.CUS_ID)
ORDER BY ORD.ORD_ST, TO_CHAR(ORD.ORD_DT, 'YYYYMM'), ORD.CUS_ID;

	SELECT  T1.ORD_ST ,TO_CHAR(T1.ORD_DT,'YYYYMM') ORD_YM ,T1.CUS_ID
			,SUM(T1.ORD_AMT) ORD_AMT
	FROM    T_ORD T1
	WHERE   T1.CUS_ID IN ('CUS_0001','CUS_0002')
	AND     T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
	AND     T1.ORD_DT < TO_DATE('20170501','YYYYMMDD')
	GROUP BY ROLLUP(T1.ORD_ST ,TO_CHAR(T1.ORD_DT,'YYYYMM') ,T1.CUS_ID)
	ORDER BY T1.ORD_ST ,TO_CHAR(T1.ORD_DT,'YYYYMM') ,T1.CUS_ID;




-- ************************************************
-- PART I - 2.2.2 SQL2
-- ************************************************

	-- 주문년월, 주문상태, 고객ID 순서로 ROLLUP(위 SQL에서 ROLLUP부분만 변경해서 수행한다.)
SELECT ORD.ORD_ST AS ORD_ST
    , TO_CHAR(ORD.ORD_DT, 'YYYYMM') AS ORD_YM
    , ORD.CUS_ID AS CUS_ID
    , SUM(ORD.ORD_AMT) AS ORD_AMT
FROM T_ORD ORD
WHERE ORD.CUS_ID IN ('CUS_0001', 'CUS_0002')
GROUP BY ROLLUP (TO_CHAR(ORD.ORD_DT, 'YYYYMM'), ORD.ORD_ST, ORD.CUS_ID)
ORDER BY TO_CHAR(ORD.ORD_DT, 'YYYYMM'), ORD.ORD_ST, ORD.CUS_ID;


-- 답
	SELECT  T1.ORD_ST ,TO_CHAR(T1.ORD_DT,'YYYYMM') ORD_YM ,T1.CUS_ID
			,SUM(T1.ORD_AMT) ORD_AMT
	FROM    T_ORD T1
	WHERE   T1.CUS_ID IN ('CUS_0001','CUS_0002')
	AND     T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
	AND     T1.ORD_DT < TO_DATE('20170501','YYYYMMDD')
	GROUP BY ROLLUP(TO_CHAR(T1.ORD_DT,'YYYYMM') ,T1.ORD_ST ,T1.CUS_ID)
	ORDER BY T1.ORD_ST ,TO_CHAR(T1.ORD_DT,'YYYYMM') ,T1.CUS_ID;


-- ************************************************
-- PART I - 2.2.3 SQL1
-- ************************************************

	-- NULL이 존재하는 컬럼인 PAY_TP에 대해 ROLLUP을 수행
SELECT ORD.ORD_ST
    , ORD.PAY_TP
    , COUNT(*) AS ORD_CNT
FROM T_ORD ORD
GROUP BY ROLLUP (ORD.ORD_ST, ORD.PAY_TP)
ORDER BY ORD.ORD_ST, ORD.PAY_TP;


-- 답
	SELECT  T1.ORD_ST ,T1.PAY_TP ,COUNT(*) ORD_CNT
	FROM    T_ORD T1
	GROUP BY ROLLUP(T1.ORD_ST ,T1.PAY_TP);


-- ************************************************
-- PART I - 2.2.3 SQL2
-- ************************************************

	-- NULL이 존재하는 컬럼인 PAY_TP에 대해 ROLLUP을 수행. GROUPING함수 사용
-- GROUPING 함수 : ROLLUP 처리되었으면 1, 아니면 0을 반환한다.
SELECT ORD.ORD_ST
    , GROUPING(ORD.ORD_ST) GRP_ORD_ST
    , ORD.PAY_TP
    , GROUPING(ORD.PAY_TP) GRP_PAY_TP
    , COUNT(*) AS ORD_CNT
FROM T_ORD ORD
GROUP BY ROLLUP (ORD.ORD_ST, ORD.PAY_TP)
ORDER BY ORD.ORD_ST, ORD.PAY_TP;


-- 답
	SELECT  T1.ORD_ST ,GROUPING(T1.ORD_ST) GR_ORD_ST
			,T1.PAY_TP ,GROUPING(T1.PAY_TP) GR_PAY_TP
			,COUNT(*) ORD_CNT
	FROM    T_ORD T1
	GROUP BY ROLLUP(T1.ORD_ST, T1.PAY_TP);



-- ************************************************
-- PART I - 2.2.3 SQL3
-- ************************************************

	-- ROLLUP되는 컬럼을 Total로 표시 (GROUPING 사용해서 1이면 Total로 뜨도록)
SELECT
    CASE WHEN GROUPING(ORD.ORD_ST)=1 THEN 'Total' ELSE ORD.ORD_ST END ORD_ST
    , CASE WHEN GROUPING(ORD.PAY_TP)=1 THEN 'Total' ELSE ORD.PAY_TP END PAY_TP
    , COUNT(*) AS ORD_CNT
FROM T_ORD ORD
GROUP BY ROLLUP (ORD.ORD_ST, ORD.PAY_TP)
ORDER BY ORD.ORD_ST, ORD.PAY_TP;

-- 답
	SELECT  CASE WHEN GROUPING(T1.ORD_ST) = 1 THEN 'Total' ELSE T1.ORD_ST END ORD_ST
			,CASE WHEN GROUPING(T1.PAY_TP) = 1 THEN 'Total' ELSE T1.PAY_TP END PAY_TP
			,COUNT(*) ORD_CNT
	FROM    T_ORD T1
	GROUP BY ROLLUP(T1.ORD_ST ,T1.PAY_TP)
	ORDER BY T1.ORD_ST ,T1.PAY_TP;




-- ************************************************
-- PART I - 2.2.4 SQL1
-- ************************************************

	-- 주문년월, 지역ID, 고객등급별 주문금액 - ROLLUP
SELECT CASE WHEN GROUPING(TO_CHAR(ORD.ORD_DT, 'YYYYMM')) = 1 THEN 'Total' ELSE TO_CHAR(ORD.ORD_DT, 'YYYYMM') END ORD_YM
    , CASE WHEN GROUPING(CUS.RGN_ID) =1 THEN 'Total' ELSE CUS.RGN_ID END RGN_ID
    , CASE WHEN GROUPING(CUS.CUS_GD) = 1 THEN 'Total' ELSE CUS.CUS_GD END CUS_GD
    , SUM(ORD.ORD_AMT) AS ORD_AMT
FROM T_ORD ORD
    LEFT OUTER JOIN M_CUS CUS
    ON CUS.CUS_ID = ORD.CUS_ID
WHERE ORD.ORD_DT BETWEEN '20170201' AND '20170331'
AND CUS.RGN_ID IN ('A','B')
GROUP BY ROLLUP (TO_CHAR(ORD.ORD_DT, 'YYYYMM'), CUS.RGN_ID, CUS.CUS_GD);

-- 답
	SELECT  CASE  WHEN GROUPING(TO_CHAR(T2.ORD_DT,'YYYYMM'))=1 THEN 'Total'
				  ELSE TO_CHAR(T2.ORD_DT,'YYYYMM') END ORD_YM
			,CASE WHEN GROUPING(T1.RGN_ID) = 1 THEN 'Total' ELSE T1.RGN_ID END RGN_ID
			,CASE WHEN GROUPING(T1.CUS_GD) = 1 THEN 'Total' ELSE T1.CUS_GD END CUS_GD
			,SUM(T2.ORD_AMT) ORD_AMT
	FROM    M_CUS T1
			,T_ORD T2
	WHERE   T1.CUS_ID = T2.CUS_ID
	AND     T2.ORD_DT >= TO_DATE('20170201','YYYYMMDD')
	AND     T2.ORD_DT < TO_DATE('20170401','YYYYMMDD')
	AND     T1.RGN_ID IN ('A','B')
	GROUP BY ROLLUP(TO_CHAR(T2.ORD_DT,'YYYYMM') ,T1.RGN_ID ,T1.CUS_GD)
	ORDER BY TO_CHAR(T2.ORD_DT,'YYYYMM') ,T1.RGN_ID ,T1.CUS_GD;



-- ************************************************
-- PART I - 2.2.4 SQL2
-- ************************************************

	-- 주문년월, 지역ID, 고객등급별 주문금액 ? 전체 합계만 구하기
SELECT CASE WHEN GROUPING(TO_CHAR(ORD.ORD_DT, 'YYYYMM')) = 1 THEN 'Total' ELSE TO_CHAR(ORD.ORD_DT, 'YYYYMM') END ORD_YM
    , CASE WHEN GROUPING(CUS.RGN_ID) =1 THEN 'Total' ELSE CUS.RGN_ID END RGN_ID
    , CASE WHEN GROUPING(CUS.CUS_GD) = 1 THEN 'Total' ELSE CUS.CUS_GD END CUS_GD
    , SUM(ORD.ORD_AMT) AS ORD_AMT
FROM T_ORD ORD
    LEFT OUTER JOIN M_CUS CUS
    ON CUS.CUS_ID = ORD.CUS_ID
WHERE ORD.ORD_DT BETWEEN '20170201' AND '20170331'
AND CUS.RGN_ID IN ('A','B')
GROUP BY ROLLUP ((TO_CHAR(ORD.ORD_DT, 'YYYYMM'), CUS.RGN_ID, CUS.CUS_GD))
ORDER BY TO_CHAR(ORD.ORD_DT, 'YYYYMM'), CUS.RGN_ID, CUS.CUS_GD;

-- 답
	SELECT  CASE  WHEN GROUPING(TO_CHAR(T2.ORD_DT,'YYYYMM'))=1 THEN 'Total'
				  ELSE TO_CHAR(T2.ORD_DT,'YYYYMM') END ORD_YM
			,CASE WHEN GROUPING(T1.RGN_ID) = 1 THEN 'Total' ELSE T1.RGN_ID END RGN_ID
			,CASE WHEN GROUPING(T1.CUS_GD) = 1 THEN 'Total' ELSE T1.CUS_GD END CUS_GD
			,SUM(T2.ORD_AMT) ORD_AMT
	FROM    M_CUS T1
			,T_ORD T2
	WHERE   T1.CUS_ID = T2.CUS_ID
	AND     T2.ORD_DT >= TO_DATE('20170201','YYYYMMDD')
	AND     T2.ORD_DT < TO_DATE('20170401','YYYYMMDD')
	AND     T1.RGN_ID IN ('A','B')
	GROUP BY ROLLUP((TO_CHAR(T2.ORD_DT,'YYYYMM') ,T1.RGN_ID ,T1.CUS_GD))
	ORDER BY TO_CHAR(T2.ORD_DT,'YYYYMM') ,T1.RGN_ID ,T1.CUS_GD;


-- ************************************************
-- PART I - 2.3.1 SQL1
-- ************************************************

	-- 주문년월, 고객ID별 주문금액 ? ROLLUP 사용
	SELECT  TO_CHAR(T1.ORD_DT,'YYYYMM') ORD_YM ,T1.CUS_ID
			,SUM(T1.ORD_AMT) ORD_AMT
	FROM    T_ORD T1
	WHERE   T1.CUS_ID IN ('CUS_0001','CUS_0002')
	AND     T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
	AND     T1.ORD_DT < TO_DATE('20170501','YYYYMMDD')
	GROUP BY ROLLUP(TO_CHAR(T1.ORD_DT,'YYYYMM') ,T1.CUS_ID);



-- ************************************************
-- PART I - 2.3.1 SQL2
-- ************************************************

	-- ROLLUP을 UNION ALL로 대신하기
	SELECT  TO_CHAR(T1.ORD_DT,'YYYYMM') ORD_YM ,T1.CUS_ID
			,SUM(T1.ORD_AMT) ORD_AMT
	FROM    T_ORD T1
	WHERE   T1.CUS_ID IN ('CUS_0001','CUS_0002')
	AND     T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
	AND     T1.ORD_DT < TO_DATE('20170501','YYYYMMDD')
	GROUP BY TO_CHAR(T1.ORD_DT,'YYYYMM') ,T1.CUS_ID
	UNION ALL
	SELECT  TO_CHAR(T1.ORD_DT,'YYYYMM') ORD_YM ,'Total' CUS_ID
			,SUM(T1.ORD_AMT) ORD_AMT
	FROM    T_ORD T1
	WHERE   T1.CUS_ID IN ('CUS_0001','CUS_0002')
	AND     T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
	AND     T1.ORD_DT < TO_DATE('20170501','YYYYMMDD')
	GROUP BY TO_CHAR(T1.ORD_DT,'YYYYMM')
	UNION ALL
	SELECT  'Total' ORD_YM ,'Total' CUS_ID
			,SUM(T1.ORD_AMT) ORD_AMT
	FROM    T_ORD T1
	WHERE   T1.CUS_ID IN ('CUS_0001','CUS_0002')
	AND     T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
	AND     T1.ORD_DT < TO_DATE('20170501','YYYYMMDD');



-- ************************************************
-- PART I - 2.3.1 SQL3
-- ************************************************

	-- ROLLUP을 카테시안 조인으로 대신하기
	SELECT  CASE WHEN T2.RNO = 1 THEN TO_CHAR(T1.ORD_DT,'YYYYMM')
				  WHEN T2.RNO = 2 THEN TO_CHAR(T1.ORD_DT,'YYYYMM')
				  WHEN T2.RNO = 3 THEN 'Total' END ORD_YM
			,CASE WHEN T2.RNO = 1 THEN T1.CUS_ID
				  WHEN T2.RNO = 2 THEN 'Total'
				  WHEN T2.RNO = 3 THEN 'Total' END CUS_ID
			,SUM(T1.ORD_AMT) ORD_AMT
	FROM    T_ORD T1
			,(
				SELECT ROWNUM RNO FROM DUAL CONNECT BY ROWNUM <= 3
			) T2
	WHERE   T1.CUS_ID IN ('CUS_0001','CUS_0002')
	AND     T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
	AND     T1.ORD_DT < TO_DATE('20170501','YYYYMMDD')
	GROUP BY CASE WHEN T2.RNO = 1 THEN TO_CHAR(T1.ORD_DT,'YYYYMM')
				  WHEN T2.RNO = 2 THEN TO_CHAR(T1.ORD_DT,'YYYYMM')
				  WHEN T2.RNO = 3 THEN 'Total' END
			,CASE WHEN T2.RNO = 1 THEN T1.CUS_ID
				  WHEN T2.RNO = 2 THEN 'Total'
				  WHEN T2.RNO = 3 THEN 'Total' END;



-- ************************************************
-- PART I - 2.3.1 SQL4
-- ************************************************

	-- ROLLUP을 WITH 절과 UNION ALL로 대체
	WITH T_RES AS(
		  SELECT  TO_CHAR(T1.ORD_DT,'YYYYMM') ORD_YM ,T1.CUS_ID
				  ,SUM(T1.ORD_AMT) ORD_AMT
		  FROM    T_ORD T1
		  WHERE   T1.CUS_ID IN ('CUS_0001','CUS_0002')
		  AND     T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
		  AND     T1.ORD_DT < TO_DATE('20170501','YYYYMMDD')
		  GROUP BY TO_CHAR(T1.ORD_DT,'YYYYMM') ,T1.CUS_ID
		  )
	SELECT  T1.ORD_YM ,T1.CUS_ID ,T1.ORD_AMT
	FROM    T_RES T1
	UNION ALL
	SELECT  T1.ORD_YM ,'Total' ,SUM(T1.ORD_AMT)
	FROM    T_RES T1
	GROUP BY T1.ORD_YM
	UNION ALL
	SELECT  'Total' ,'Total' ,SUM(T1.ORD_AMT)
	FROM    T_RES T1;



-- ************************************************
-- PART I - 2.3.2 SQL1
-- ************************************************

	-- 주문상태(ORD_ST), 주문년월, 고객ID별 주문금액 ? CUBE로 가능한 모든 소계를 추가
	SELECT  CASE  WHEN GROUPING(T1.ORD_ST)=1 THEN 'Total' ELSE T1.ORD_ST END ORD_ST
			,CASE WHEN GROUPING(TO_CHAR(T1.ORD_DT,'YYYYMM'))=1 THEN 'Total'
				  ELSE TO_CHAR(T1.ORD_DT,'YYYYMM') END ORD_YM
			,CASE WHEN GROUPING(T1.CUS_ID)=1 THEN 'Total' ELSE T1.CUS_ID END CUS_ID
			,SUM(T1.ORD_AMT) ORD_AMT
	FROM    T_ORD T1
	WHERE   T1.CUS_ID IN ('CUS_0001','CUS_0002')
	AND     T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
	AND     T1.ORD_DT < TO_DATE('20170501','YYYYMMDD')
	GROUP BY CUBE(T1.ORD_ST ,TO_CHAR(T1.ORD_DT,'YYYYMM') ,T1.CUS_ID)
	ORDER BY T1.ORD_ST ,TO_CHAR(T1.ORD_DT,'YYYYMM') ,T1.CUS_ID;


-- ************************************************
-- PART I - 2.3.3 SQL1
-- ************************************************

	-- 주문년월, 고객ID별 주문건수와 주문 금액 ? GROUPING SETS 활용
	SELECT  TO_CHAR(T1.ORD_DT,'YYYYMM') ORD_YM
			,T1.CUS_ID
			,COUNT(*) ORD_CNT
			,SUM(T1.ORD_AMT) ORD_AMT
	FROM    T_ORD T1
	WHERE   T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
	AND     T1.ORD_DT < TO_DATE('20170501','YYYYMMDD')
	AND     T1.CUS_ID IN ('CUS_0061','CUS_0062')
	GROUP BY GROUPING SETS(
					  (TO_CHAR(T1.ORD_DT,'YYYYMM'),T1.CUS_ID)  --GROUP BY기본 데이터
					  ,(TO_CHAR(T1.ORD_DT,'YYYYMM'))  --주문년월별 소계
					  ,(T1.CUS_ID)  --고객ID별 소계
					  ,()   --전체합계
				  );

